{"version":3,"sources":["components/Card/Card.js","components/Card-List/Card-List.js","components/Search-Box/Search-Box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","seachFeild","target","value","state","fetch","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAIaA,G,YAAO,SAAC,GAAa,IAAZC,EAAW,EAAXA,QAClB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,aCLXC,EAAW,SAACC,GACzB,OACI,qBAAKP,UAAU,YAAf,SACKO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCLlBO,G,YAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACpC,OACI,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4BHG,E,kDA/Bb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,WAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,WAAY,IAJH,E,kMAQOI,MAAM,8C,cAAlBC,E,gBACcA,EAAIC,O,OAAlBC,E,OACNC,KAAKT,SAAS,CAACT,SAAUiB,I,qIAOlB,IAAD,EACyBC,KAAKL,MAA7Bb,EADD,EACCA,SAAUU,EADX,EACWA,WACXS,EAAmBnB,EAASoB,QAAQ,SAAA7B,GAAO,OAAIA,EAAQK,KAAKyB,cAAcC,SAASZ,EAAWW,kBAEpG,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAcc,KAAKd,eAC5D,cAAC,EAAD,CAAUJ,SAAUmB,W,GA1BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dcbc596e.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css'\n\n\nexport const Card = ({monster})=>{\n    return (\n        <div className=\"card-container\">\n            <img alt=\"Monster\" src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\n            <h1>{monster.name}</h1>\n            <p>{monster.email}</p>\n        </div>\n    )\n}","import React from 'react';\nimport {Card} from '../Card/Card'\n\n\nexport const CardList = (props)=>{\nreturn (\n    <div className=\"card-list\">\n        {props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n    </div>\n  );\n}\n\n","import React from 'react';\nimport './search-box.css'\n\nexport const SearchBox = ({placeholder, handleChange})=>{\n    return(\n        <input \n        className='search'\n        type='search' \n        placeholder={placeholder} \n        onChange={handleChange}\n        />\n    )\n}","import React, {Component} from 'react';\nimport './App.css';\nimport { CardList } from './components/Card-List/Card-List';\nimport './components/Card-List/cradlist.css';\nimport { SearchBox } from './components/Search-Box/Search-Box';\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      seachFeild: ''\n    }\n  }\n  async componentDidMount(){\n    const res = await fetch('https://jsonplaceholder.typicode.com/users');\n    const users = await res.json();\n    this.setState({monsters: users});\n  }\n\n  handleChange = (e)=> {\n    this.setState({seachFeild: e.target.value});\n  }\n\n  render(){\n    const {monsters, seachFeild} = this.state;\n    const filteredMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(seachFeild.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox placeholder=\"Search Monsters\" handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}